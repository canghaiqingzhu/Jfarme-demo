package com.xiehui.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import com.xiehui.mapper.UserMapper;
import com.xiehui.util.JDBCTemplate;
import com.xiehui.util.MyThread;
import com.xiehui.util.RowMapper;

public class ABFrame extends JFrame implements ActionListener{
	private static final Object Object = null;
	private JPanel acontentPane;
	private JTextField oldpassword;
	private JTextField newpassword;

	private Object name,password;
	private JDBCTemplate atemp = new JDBCTemplate();
	private DefaultTableModel adtm = new DefaultTableModel();
	private JPanel bcontentPane;
	private JTextField thingId;
	private JTextField thingNum;
	private Vector bdata = new Vector();
	private Vector bcolname = new Vector();
	
	private JTable table;
	private DefaultTableModel bdtm;
	private JTable selfmessage;
	private Vector acolname;
	private Vector adata = new Vector();
	private JLabel jl;
	/**
	 * Launch the application.
	 */


	/**
	 * Create the frame.
	 */
	public ABFrame(Object name,Object password) {
		this.name = name;
		this.password = password;
		
		this.setTitle((String) name);
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 417);
		acontentPane = new JPanel();
		acontentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(acontentPane);
		acontentPane.setLayout(null);
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		tabbedPane.setBounds(0, 35, 424, 344);
		acontentPane.add(tabbedPane);
		
		JPanel jp1 = new JPanel();
		tabbedPane.addTab("管理", null, jp1, null);
		jp1.setLayout(null);
		
		JLabel label = new JLabel("旧密码：");
		label.setHorizontalAlignment(SwingConstants.CENTER);
		label.setBounds(31, 21, 54, 15);
		jp1.add(label);
		
		oldpassword = new JTextField();
		oldpassword.setBounds(114, 18, 66, 21);
		jp1.add(oldpassword);
		oldpassword.setColumns(10);
		
		JLabel label_1 = new JLabel("新密码：");
		label_1.setHorizontalAlignment(SwingConstants.CENTER);
		label_1.setBounds(31, 59, 54, 15);
		jp1.add(label_1);
		
		newpassword = new JTextField();
		newpassword.setBounds(114, 56, 66, 21);
		jp1.add(newpassword);
		newpassword.setColumns(10);
		
		JButton button = new JButton("sure");
		button.addActionListener(this);
		button.setBounds(233, 35, 93, 23);
		jp1.add(button);
		
		JLabel label_2 = new JLabel("个人信息：");
		label_2.setHorizontalAlignment(SwingConstants.CENTER);
		label_2.setBounds(27, 108, 84, 15);
		jp1.add(label_2);
		
		acolname = new Vector();
		acolname.add("id");
		acolname.add("username");
		acolname.add("password");
		acolname.add("root");
		fanSelf();
		selfmessage = new JTable(adtm);
		selfmessage.setSize(399, 71);
		JScrollPane scrollPane = new JScrollPane(selfmessage);
		scrollPane.setBounds(10, 140, 399, 71);
		jp1.add(scrollPane);
		
//----------------------------------------------------------------------------------------
		JPanel jp2 = new JPanel();
		tabbedPane.addTab("工作", null, jp2, null);
		jp2.setLayout(null);
		

		JLabel lblId = new JLabel("id");
		lblId.setBounds(10, 23, 23, 15);
		jp2.add(lblId);

		thingId = new JTextField();
		thingId.setBounds(34, 20, 66, 21);
		jp2.add(thingId);
		thingId.setColumns(10);

		JLabel label1 = new JLabel("数量");
		label1.setBounds(145, 23, 38, 15);
		jp2.add(label1);

		thingNum = new JTextField();
		thingNum.setBounds(174, 20, 66, 21);
		jp2.add(thingNum);
		thingNum.setColumns(10);


		bcolname.add("id");
		bcolname.add("商品名称");
		bcolname.add("数量");
		bcolname.add("进货单价");

		bdtm = new DefaultTableModel(bdata, bcolname);

		table = new JTable(bdtm);
		JScrollPane scrollPane1 = new JScrollPane(table);
		scrollPane1.setBounds(10, 49, 399, 224);
		jp2.add(scrollPane1);
		
		JButton btnAdd = new JButton("添加");
		btnAdd.setBounds(296, 19, 76, 23);
		jp2.add(btnAdd);

		JButton btnIn = new JButton("进货");
		btnIn.setBounds(161, 282, 93, 23);
		jp2.add(btnIn);
		btnIn.addActionListener(this);
		btnAdd.addActionListener(this);

//----------------------------------------------------------------------------------------
		jl = new JLabel("New label");
		jl.setHorizontalAlignment(SwingConstants.CENTER);
		jl.setBounds(109, 10, 182, 15);
		acontentPane.add(jl);
		
		MyThread mt = new MyThread(jl);
		mt.start();
	}
	
	public boolean productIsExist(String p_id) {
		
		for (int i = 0; i < adata.size(); i++) {
			Vector d = (Vector) adata.get(i);
			if (p_id.equals(d.get(0))) {
				//找到相同的
				return true;
			}
		}
		//没有找到相同
		return false;
	}
	
	public void fanSelf(){
		
		adata = fanSelfAll(name,password);
		adtm.setDataVector( adata, acolname);
	}
	
	public Vector fanSelfAll(Object name,Object password){
		String sql = "select * from user where username=? and password=?";
		RowMapper um = new UserMapper();
		Object[] array={name,password};
		adata = atemp.query(sql, um,array);
		return  adata;
		
	}
	
	public int fanId(Object name,Object password){
		int id = 0;
		if(oldpassword.getText().equals(password)){
			adata = fanSelfAll(name,password);
			Object data1 = adata.get(0);
			Object v =((Vector) data1).get(0);
			System.out.println("v----"+v);
			String a = v.toString();
			id = Integer.parseInt(a);
			System.out.println("id----"+id);
		}
		return id;
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if("sure".equals(e.getActionCommand())){
			if(oldpassword.getText().equals(password)){
				System.out.println("=======sure========");
				int id = fanId(name,password);
				System.out.println("id----"+id);
				String sql="update user set password=? where id=?";
				Object[] arg={newpassword.getText(),id};
				atemp.modify(sql, arg);
				fanSelf();
			}else{
				JOptionPane.showMessageDialog(null, "密码错误!!");
			}
		}else if ("添加".equals(e.getActionCommand())) {
			// 当浏览区域没有该商品时，将新建一个Vector
			if (productIsExist(thingId.getText()) == false) {
				Vector data1 = new Vector();
				data1.add(thingId.getText());
				data1.add("商品");
				data1.add(thingNum.getText());
				data1.add(10);
				bdata.add(data1);
			} else {
				for (int i = 0; i < bdata.size(); i++) {
					Vector d = (Vector) bdata.get(i);
					if (thingId.getText().equals(d.get(0))) {
						// 找到相同的
						d.set(2,
								Integer.valueOf(String.valueOf(d.get(2)))
										+ Integer.valueOf(String
												.valueOf(thingNum.getText())));
					}
				}
			}
			bdtm.setDataVector(bdata, bcolname);

		} else if ("进货".equals(e.getActionCommand())) {
			JDBCTemplate temp = new JDBCTemplate();

			String sql = "insert into in_product(p_id,name,number,price,in_time) values(?,?,?,?,?) ";
			String stime = jl.getText();
			Object[] arg = new Object[5];
			for (int i = 0; i < bdata.size(); i++) {
				Vector data1 = (Vector) bdata.get(i);
				for (int j = 0; j < data1.size(); j++) {
					arg[j] = data1.get(j);
				}
				arg[4] = stime;
				temp.modify(sql, arg);
			}

		}
	}
}
